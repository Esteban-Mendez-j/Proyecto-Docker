import { e as createAstro, f as createComponent, r as renderTemplate, i as renderComponent, m as maybeRenderHead, h as addAttribute, j as Fragment, u as unescapeHTML } from '../../chunks/astro/server_BYoYEapS.mjs';
import 'kleur/colors';
import { m as manejarRespuesta, $ as $$Footer, H as Header } from '../../chunks/Footer_BR33Q6Xf.mjs';
import { A as API_URL } from '../../chunks/Api_4ZQkpW66.mjs';
import { $ as $$Layout } from '../../chunks/Layout_DMqpAtD-.mjs';
export { renderers } from '../../renderers.mjs';

var __freeze = Object.freeze;
var __defProp = Object.defineProperty;
var __template = (cooked, raw) => __freeze(__defProp(cooked, "raw", { value: __freeze(cooked.slice()) }));
var _a;
const $$Astro = createAstro("https://searchjobs.com/");
const $$id = createComponent(async ($$result, $$props, $$slots) => {
  const Astro2 = $$result.createAstro($$Astro, $$props, $$slots);
  Astro2.self = $$id;
  const { id } = Astro2.params;
  const res = await fetch(`${API_URL}/api/vacantes/seleccion/${id}`, {
    headers: Astro2.request.headers
  });
  const data = await manejarRespuesta(res);
  const job = data.vacanteSeleccionada;
  let rol = "ROLE_INVITADO";
  let curriculo = null;
  let idUsuarioLogueado = null;
  console.log(job);
  try {
    const res2 = await fetch(`${API_URL}/api/usuarios/rol`, {
      headers: Astro2.request.headers
    });
    const data2 = await manejarRespuesta(res2);
    rol = data2.rolPrincipal;
    idUsuarioLogueado = data2.id;
  } catch (error) {
    console.error("Error fetching user role:", error);
  }
  if (rol === "CANDIDATO") {
    const res2 = await fetch(`${API_URL}/api/candidatos/perfil`, {
      headers: Astro2.request.headers
    });
    const data2 = await manejarRespuesta(res2);
    curriculo = data2.candidato.curriculo;
  }
  return renderTemplate(_a || (_a = __template(["", ' <script type="module" src="/src/javascripts/Postulacion.js"><\/script>'])), renderComponent($$result, "Layout", $$Layout, { "title": `${job.titulo} en ${job.nameEmpresa} | SearchJobs` }, { "default": async ($$result2) => renderTemplate` ${renderComponent($$result2, "Header", Header, { "client:load": true, "client:component-hydration": "load", "client:component-path": "C:/Users/Asus/OneDrive/Desktop/Proyecto-Docker/SearchJobs-front/src/components/Header.jsx", "client:component-export": "default" })} ${maybeRenderHead()}<div class="container px-5 py-10 mx-auto"> <div class="grid grid-cols-1 lg:grid-cols-[1fr_350px] gap-8"> <!-- Detalles del empleo --> <div> <div class="p-8 mb-8 border rounded-lg shadow-lg bg-white/80 backdrop-blur-xl border-white/20"> ${!job.active && rol === "EMPRESA" && renderTemplate`<div class="bg-yellow-100 border-l-4 border-yellow-500 text-yellow-800 p-4 rounded-md shadow-sm mb-4"> <p class="font-semibold">⚠️ Vacante desactivada por el administrador</p> <p>${job.comentarioAdmin}</p> </div>`} <div class="flex flex-col gap-6 pb-8 mb-8 border-b border-gray-100 md:flex-row md:items-center"> <div class="flex-shrink-0 w-20 h-20 overflow-hidden rounded-lg"> <img${addAttribute(job.imagenEmpresa ? `${API_URL}/img/` + job.imagenEmpresa : `${API_URL}/images/imgEmpresa.png`, "src")}${addAttribute(`${job.nameEmpresa} logo`, "alt")} class="object-cover w-full h-full"> </div> <div class="flex-grow"> <a class="mb-2 text-2xl font-bold">${job.titulo}</a> <div class="flex flex-wrap gap-2 mb-3"> <span class="inline-flex items-center text-sm text-text-light"> <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="mr-1"> <rect x="2" y="7" width="20" height="14" rx="2" ry="2"></rect> <path d="M16 21V5a2 2 0 0 0-2-2h-4a2 2 0 0 0-2 2v16"></path> </svg> ${job.nameEmpresa} </span> <span class="inline-flex items-center text-sm text-text-light"> <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="mr-1"> <path d="M21 10c0 7-9 13-9 13s-9-6-9-13a9 9 0 0 1 18 0z"></path> <circle cx="12" cy="10" r="3"></circle> </svg> ${job.ciudad}, ${job.departamento} </span> <span class="inline-flex items-center text-sm text-text-light"> <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="mr-1"> <circle cx="12" cy="12" r="10"></circle> <polyline points="12 6 12 12 16 14"></polyline> </svg>
Publicado: ${job.fechaPublicacion} </span> </div> <div class="flex flex-wrap gap-2"> <span class="px-3 py-1 text-xs font-medium rounded-full bg-primary/10 text-primary"> ${job.tipo} </span> <span class="px-3 py-1 text-xs font-medium rounded-full bg-primary/10 text-primary"> ${job.modalidad} </span> <span class="px-3 py-1 text-xs font-medium rounded-full bg-primary/10 text-primary"> ${job.cargo} </span> </div> </div> </div> <!-- Información detallada del empleo --> <div class="grid grid-cols-1 gap-6 mb-8 md:grid-cols-2"> <div class="flex items-start"> <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="mt-1 mr-3 text-primary"> <path d="M21 10c0 7-9 13-9 13s-9-6-9-13a9 9 0 0 1 18 0z"></path> <circle cx="12" cy="10" r="3"></circle> </svg> <div> <p class="text-sm text-text-light">Ciudad</p> <p class="font-medium">${job.ciudad}</p> </div> </div> <div class="flex items-start"> <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="mt-1 mr-3 text-primary"> <path d="M12 22s8-4 8-10V5l-8-3-8 3v7c0 6 8 10 8 10z"></path> </svg> <div> <p class="text-sm text-text-light">Departamento</p> <p class="font-medium">${job.departamento}</p> </div> </div> <div class="flex items-start"> <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="mt-1 mr-3 text-primary"> <rect x="2" y="7" width="20" height="14" rx="2" ry="2"></rect> <line x1="2" y1="11" x2="22" y2="11"></line> </svg> <div> <p class="text-sm text-text-light">Tipo</p> <p class="font-medium">${job.tipo}</p> </div> </div> <div class="flex items-start"> <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="mt-1 mr-3 text-primary"> <rect x="2" y="3" width="20" height="14" rx="2" ry="2"></rect> <line x1="8" y1="21" x2="16" y2="21"></line> <line x1="12" y1="17" x2="12" y2="21"></line> </svg> <div> <p class="text-sm text-text-light">Modalidad</p> <p class="font-medium">${job.modalidad}</p> </div> </div> <div class="flex items-start"> <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="mt-1 mr-3 text-primary"> <line x1="12" y1="1" x2="12" y2="23"></line> <path d="M17 5H9.5a3.5 3.5 0 0 0 0 7h5a3.5 3.5 0 0 1 0 7H6"></path> </svg> <div> <p class="text-sm text-text-light">Sueldo</p> <p class="font-medium">${job.sueldo}</p> </div> </div> <div class="flex items-start"> <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="mt-1 mr-3 text-primary"> <path d="M20 21v-2a4 4 0 0 0-4-4H8a4 4 0 0 0-4 4v2"></path> <circle cx="12" cy="7" r="4"></circle> </svg> <div> <p class="text-sm text-text-light">Cargo</p> <p class="font-medium">${job.cargo}</p> </div> </div> <div class="flex items-start"> <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="mt-1 mr-3 text-primary"> <path d="M20 21v-2a4 4 0 0 0-4-4H8a4 4 0 0 0-4 4v2"></path> <circle cx="12" cy="7" r="4"></circle> </svg> <div> <p class="text-sm text-text-light">Postulados</p> <p class="font-medium">${job.nPostulados}</p> </div> </div> <div class="flex items-start"> <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="mt-1 mr-3 text-primary"> <circle cx="12" cy="12" r="10"></circle> <polyline points="12 6 12 12 16 14"></polyline> </svg> <div> <p class="text-sm text-text-light">Experiencia</p> <p class="font-medium">${job.experiencia} años</p> </div> </div> </div> <!-- Descripción del puesto --> <div class="mb-8"> <h2 class="flex items-center mb-4 text-xl font-semibold"> <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="mr-2 text-primary"> <path d="M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z"></path> <polyline points="14 2 14 8 20 8"></polyline> <line x1="16" y1="13" x2="8" y2="13"></line> <line x1="16" y1="17" x2="8" y2="17"></line> <polyline points="10 9 9 9 8 9"></polyline> </svg>
Descripción del Puesto
</h2> <div class="prose max-w-none"> ${renderComponent($$result2, "Fragment", Fragment, {}, { "default": async ($$result3) => renderTemplate`${unescapeHTML(job.descripcion)}` })} </div> </div> <!-- Requerimientos del puesto --> <div> <h2 class="flex items-center mb-4 text-xl font-semibold"> <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="mr-2 text-primary"> <path d="M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z"></path> <polyline points="14 2 14 8 20 8"></polyline> <line x1="16" y1="13" x2="8" y2="13"></line> <line x1="16" y1="17" x2="8" y2="17"></line> <polyline points="10 9 9 9 8 9"></polyline> </svg>
Requerimientos del Puesto
</h2> <div class="prose max-w-none"> ${renderComponent($$result2, "Fragment", Fragment, {}, { "default": async ($$result3) => renderTemplate`${unescapeHTML(job.requerimientos)}` })} </div> </div> </div> </div> <!-- Sidebar --> <div> <div class="sticky p-6 border rounded-lg shadow-lg bg-white/80 backdrop-blur-xl border-white/20 top-24"> <h2 class="mb-6 text-xl font-semibold">Resumen de la oferta</h2> <div class="mb-8 space-y-4"> <div class="flex items-start"> <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="mt-1 mr-3 text-primary"> <rect x="2" y="7" width="20" height="14" rx="2" ry="2"></rect> <path d="M16 21V5a2 2 0 0 0-2-2h-4a2 2 0 0 0-2 2v16"></path> </svg> <div> <p class="text-sm text-text-light">Empresa</p> <a${addAttribute(`/perfil/empresa/${job.idUsuario}`, "href")} class="font-medium text-blue-600 no-underline hover:text-blue-700 transition-colors"> ${job.nameEmpresa} </a> </div> </div> <div class="flex items-start"> <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="mt-1 mr-3 text-primary"> <path d="M21 10c0 7-9 13-9 13s-9-6-9-13a9 9 0 0 1 18 0z"></path> <circle cx="12" cy="10" r="3"></circle> </svg> <div> <p class="text-sm text-text-light">Ubicación</p> <p class="font-medium">${job.ciudad}, ${job.departamento}</p> </div> </div> <div class="flex items-start"> <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="mt-1 mr-3 text-primary"> <line x1="12" y1="1" x2="12" y2="23"></line> <path d="M17 5H9.5a3.5 3.5 0 0 0 0 7h5a3.5 3.5 0 0 1 0 7H6"></path> </svg> <div> <p class="text-sm text-text-light">Salario</p> <p class="font-medium">${job.sueldo}</p> </div> </div> <div class="flex items-start"> <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="mt-1 mr-3 text-primary"> <circle cx="12" cy="12" r="10"></circle> <polyline points="12 6 12 12 16 14"></polyline> </svg> <div> <p class="text-sm text-text-light">Fecha de publicación</p> <p class="font-medium">${job.fechaPublicacion}</p> </div> </div> <div class="flex items-start"> <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="mt-1 mr-3 text-primary"> <path d="M20 21v-2a4 4 0 0 0-4-4H8a4 4 0 0 0-4 4v2"></path> <circle cx="12" cy="7" r="4"></circle> </svg> <div> <p class="text-sm text-text-light">Postulados</p> <p class="font-medium">${job.nPostulados}</p> </div> </div> </div> ${rol === "CANDIDATO" ? renderTemplate`${renderComponent($$result2, "Fragment", Fragment, {}, { "default": async ($$result3) => renderTemplate`${job.candidatoPostulado && job.estadoPostulacion !== "Cancelada" ? renderTemplate`<span${addAttribute(`top-4 right-4 text-white text-xs font-semibold px-9 py-3 rounded-full shadow-md ${job.estadoPostulacion === "Aceptada" ? "bg-green-500" : job.estadoPostulacion === "Rechazada" ? "bg-red-500" : "bg-blue-500"}`, "class")}> ${job.estadoPostulacion} </span>` : renderTemplate`${renderComponent($$result3, "Fragment", Fragment, {}, { "default": async ($$result4) => renderTemplate`${!job.active || !job.activaPorEmpresa ? renderTemplate`<p class="text-red-600 text-sm mt-2">
Esta vacante está deshabilitada y no puedes postularte.
</p>` : renderTemplate`${renderComponent($$result4, "Fragment", Fragment, {}, { "default": async ($$result5) => renderTemplate` <button id="applyButton"${addAttribute(id, "data-id")} class="w-full bg-gradient-primary text-white py-3 px-6 rounded-lg shadow-lg hover:shadow-xl transition-all duration-300 hover:-translate-y-0.5 disabled:opacity-50 disabled:cursor-not-allowed"${addAttribute(!curriculo, "disabled")}>
Postularme ahora
</button> ${!curriculo && renderTemplate`<p class="text-red-600 text-sm mt-2">
Debes subir tu currículum para poder postularte.
</p>`}` })}`}` })}`}` })}` : rol === "ROLE_INVITADO" ? renderTemplate`<a href="/login" class="w-full bg-gradient-primary text-white py-3 px-6 rounded-lg shadow-lg hover:shadow-xl transition-all duration-300 hover:-translate-y-0.5">
Inicia sesión para postularte
</a>` : rol === "EMPRESA" ? job.idUsuario == idUsuarioLogueado ? renderTemplate`<a class="w-full bg-gradient-primary text-white py-3 px-6 rounded-lg shadow-lg hover:shadow-xl transition-all duration-300 hover:-translate-y-0.5"${addAttribute(`/postulados/${id}`, "href")}>
Ver Postulados
</a>` : null : null} </div> </div> </div> </div>  `, "footer": async ($$result2) => renderTemplate`${renderComponent($$result2, "Footer", $$Footer, { "slot": "footer" })}` }));
}, "C:/Users/Asus/OneDrive/Desktop/Proyecto-Docker/SearchJobs-front/src/pages/empleos/[id].astro", void 0);

const $$file = "C:/Users/Asus/OneDrive/Desktop/Proyecto-Docker/SearchJobs-front/src/pages/empleos/[id].astro";
const $$url = "/empleos/[id]";

const _page = /*#__PURE__*/Object.freeze(/*#__PURE__*/Object.defineProperty({
  __proto__: null,
  default: $$id,
  file: $$file,
  url: $$url
}, Symbol.toStringTag, { value: 'Module' }));

const page = () => _page;

export { page };
